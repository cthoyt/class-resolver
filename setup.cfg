##########################
# Setup.py Configuration #
##########################
[metadata]
name = class_resolver
version = 0.4.1-dev
description = Lookup and instantiate classes with style.
long_description = file: README.md
long_description_content_type = text/markdown

# URLs associated with the project
url = https://github.com/cthoyt/class-resolver
download_url = https://github.com/cthoyt/class-resolver/releases
project_urls =
    Bug Tracker = https://github.com/cthoyt/class-resolver/issues
    Source Code = https://github.com/cthoyt/class-resolver

# Author information
author = Charles Tapley Hoyt
author_email = cthoyt@gmail.com
maintainer = Charles Tapley Hoyt
maintainer_email = cthoyt@gmail.com

# License Information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Framework :: Pytest
    Framework :: tox
    Framework :: Sphinx
    Programming Language :: Python
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3 :: Only
keywords =
    development tool
    configurability

[options]
# Random options
zip_safe = false
include_package_data = True
python_requires = >=3.7

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
click =
    click
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-autodoc-typehints
    sphinx_automodapi
tests =
    docdata
    coverage
    pytest
docdata =
    docdata
ray =
    ray[tune]<2.0.0; python_version < "3.9"
torch =
    torch
optuna =
    optuna
numpy =
    numpy
sklearn =
    scikit-learn

[options.entry_points]
class_resolver_demo =
    add = operator:add
    sub = operator:sub
    mul = operator:mul
    expected_failure = operator:nope_this_is_not_real

######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = class_resolver
omit =
    tests/*
    docs/*

[coverage:paths]
source =
    src/class_resolver
    .tox/*/lib/python*/site-packages/class_resolver

[coverage:report]
show_missing = True
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    if __name__ == .__main__.:
    def __str__
    def __repr__
    if TYPE_CHECKING:

##########################
# Darglint Configuration #
##########################
[darglint]
docstring_style = sphinx
strictness = short

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
ignore =
    S301 # pickle
    S403 # pickle
    S404
    S603
    W503 # Line break before binary operator (flake8 is wrong)
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/fixtures/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
    data
max-line-length = 120
max-complexity = 20
import-order-style = pycharm
application-import-names =
    class_resolver
    tests
